apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ingress-default-http-backend
  labels:
    app: ingress-default-http-backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ingress-default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: ingress-default-http-backend
        # Any image is permissable as long as:
        # 1. It serves a 404 page at /
        # 2. It serves 200 on a /healthz endpoint
        image: gcr.io/google_containers/defaultbackend:1.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
---

apiVersion: v1
kind: Service
metadata:
  name: ingress-default-http-backend
  labels:
    app: ingress-default-http-backend
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: ingress-default-http-backend
---

kind: ConfigMap
apiVersion: v1
metadata:
  name: ingress-nginx-configuration
  labels:
    app: ingress-nginx
---

kind: ConfigMap
apiVersion: v1
metadata:
  name: ingress-tcp-services
---

kind: ConfigMap
apiVersion: v1
metadata:
  name: ingress-udp-services
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-nginx
  template:
    metadata:
      labels:
        app: ingress-nginx
    spec:
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.10.2
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/ingress-default-http-backend
            - --configmap=$(POD_NAMESPACE)/ingress-nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/ingress-tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/ingress-udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
---

kind: Service
apiVersion: v1
metadata:
  name: ingress-nginx
  labels:
    app: ingress-nginx
  annotations:
    acme/certificate: '{{stellar_bifrost_domain_name}}'
    acme/secretName: 'stellar-bifrost-tls-secret'
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  loadBalancerIP: "{{ingress_lb_ip}}"
  selector:
    app: ingress-nginx
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
